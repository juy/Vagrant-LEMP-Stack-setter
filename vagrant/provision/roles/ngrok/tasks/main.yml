---

- name: ngrok | set facts
  set_fact: >
    ngrok_package="{{ ngrok.download_url|default("https://dl.ngrok.com/linux_386/ngrok.zip") }}"
    ngrok_port={{ ngrok.port|default('80') }}
    ngrok_client={{ ngrok.client|default('false') }}
    ngrok_subdomain="{{ '-subdomain=' ~ ngrok.subdomain if ngrok.subdomain is defined else '' }}"
    ngrok_httpauth="{{ '-httpauth=' ~ ngrok.httpauth if ngrok.httpauth is defined else '' }}"
    ngrok_proto="{{ '-proto=' ~ ngrok.proto if ngrok.proto is defined else '' }}"
    ngrok_hostname="{{ '-hostname=' ~ ngrok.hostname if ngrok.hostname is defined else '' }}"
    ngrok_config="{{ '-config=' ~ ngrok.config if ngrok.config is defined else '' }}"
    ngrok_log="{{ '-log=stdout' ~ ngrok.log if ngrok.log is defined else '' }}"

- name: ngrok | check if installed
  stat: >
    path=/usr/local/bin/ngrok
  register: ngrok_installed

- name: ngrok | download package
  get_url: >
    url={{ ngrok_package }}
    dest=/usr/src/ngrok.zip
    force=yes
  when: not ngrok_installed.stat.exists

- name: ngrok | extract package
  command: >
    unzip ngrok.zip
    chdir=/usr/src/
    creates=/usr/src/ngrok
  when: not ngrok_installed.stat.exists

- name: ngrok | remove package
  file: >
    path=/usr/src/ngrok.zip
    state=absent
  when: not ngrok_installed.stat.exists

#- name: ngrok | install symlink
#  file: >
#    src=/usr/src/ngrok
#    dest=/usr/local/bin/ngrok
#    state=link
#  when: not ngrok_installed.stat.exists

- name: ngrok | add ngrok start script
  template: >
    src=ngrok.sh.j2
    dest=/usr/local/bin/ngrok
    owner={{ user }}
    group={{ user }}
    mode=0755
  when: not ngrok_installed.stat.exists
